/*****START OF DEBUG INFORMATION*****

The primary key column list:
[id]

The INSERT column list:
[id],[Workflow_id],[ProcedureInstance_id]

The UPDATE column list:
 [Target].[Workflow_id] = [Source].[Workflow_id], 
  [Target].[ProcedureInstance_id] = [Source].[ProcedureInstance_id]

The SELECT statement executed to generate the MERGE:
SELECT ' ' + CASE WHEN ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) = 1 THEN ' ' ELSE ',' END + '('+ COALESCE(LTRIM(RTRIM(CONVERT(char, [id]))),'NULL')+',' + COALESCE(LTRIM(RTRIM(CONVERT(char, [Workflow_id]))),'NULL')+',' + COALESCE(LTRIM(RTRIM(CONVERT(char, [ProcedureInstance_id]))),'NULL')+')'  FROM [repo].[WorkflowStep] (NOLOCK) ORDER BY [id]

*****END OF DEBUG INFORMATION*****/


USE [dhw_self]
GO

--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [repo].[WorkflowStep] ON

MERGE INTO [repo].[WorkflowStep] AS [Target]
USING (SELECT [id],[Workflow_id],[ProcedureInstance_id] FROM [repo].[WorkflowStep] WHERE 1 = 0 -- Empty dataset (source table contained no rows at time of MERGE generation) 
) AS [Source] ([id],[Workflow_id],[ProcedureInstance_id])
ON ([Target].[id] = [Source].[id])
WHEN MATCHED AND (
	NULLIF([Source].[Workflow_id], [Target].[Workflow_id]) IS NOT NULL OR NULLIF([Target].[Workflow_id], [Source].[Workflow_id]) IS NOT NULL OR 
	NULLIF([Source].[ProcedureInstance_id], [Target].[ProcedureInstance_id]) IS NOT NULL OR NULLIF([Target].[ProcedureInstance_id], [Source].[ProcedureInstance_id]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[Workflow_id] = [Source].[Workflow_id], 
  [Target].[ProcedureInstance_id] = [Source].[ProcedureInstance_id]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([id],[Workflow_id],[ProcedureInstance_id])
 VALUES([Source].[id],[Source].[Workflow_id],[Source].[ProcedureInstance_id])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [repo].[WorkflowStep]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[repo].[WorkflowStep] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [repo].[WorkflowStep] OFF
SET NOCOUNT OFF
GO
