/*****START OF DEBUG INFORMATION*****

The primary key column list:
[id]

The INSERT column list:
[id],[usp_id],[Number],[Name],[UserTypeFullname],[is_inactive],[is_out],[has_DefaultValue],[DefaultValue]

The UPDATE column list:
 [Target].[usp_id] = [Source].[usp_id], 
  [Target].[Number] = [Source].[Number], 
  [Target].[Name] = [Source].[Name], 
  [Target].[UserTypeFullname] = [Source].[UserTypeFullname], 
  [Target].[is_inactive] = [Source].[is_inactive], 
  [Target].[is_out] = [Source].[is_out], 
  [Target].[has_DefaultValue] = [Source].[has_DefaultValue], 
  [Target].[DefaultValue] = [Source].[DefaultValue]

The SELECT statement executed to generate the MERGE:
SELECT ' ' + CASE WHEN ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) = 1 THEN ' ' ELSE ',' END + '('+ COALESCE(LTRIM(RTRIM(CONVERT(char, [id]))),'NULL')+',' + COALESCE(LTRIM(RTRIM(CONVERT(char, [usp_id]))),'NULL')+',' + COALESCE(LTRIM(RTRIM(CONVERT(char, [Number]))),'NULL')+',' + COALESCE('N''' + REPLACE([Name],'''','''''')+'''','NULL')+',' + COALESCE('N''' + REPLACE([UserTypeFullname],'''','''''')+'''','NULL')+',' + COALESCE(LTRIM(RTRIM(CONVERT(char, [is_inactive]))),'NULL')+',' + COALESCE(LTRIM(RTRIM(CONVERT(char, [is_out]))),'NULL')+',' + COALESCE(LTRIM(RTRIM(CONVERT(char, [has_DefaultValue]))),'NULL')+',' + COALESCE('N''' + REPLACE([DefaultValue],'''','''''')+'''','NULL')+')'  FROM [repo].[GeneratorUspParameter] (NOLOCK) ORDER BY [id]

*****END OF DEBUG INFORMATION*****/


USE [dhw_self]
GO

--MERGE generated by 'sp_generate_merge' stored procedure
--Originally by Vyas (http://vyaskn.tripod.com/code): sp_generate_inserts (build 22)
--Adapted for SQL Server 2008+ by Daniel Nolan (https://twitter.com/dnlnln)

SET NOCOUNT ON

SET IDENTITY_INSERT [uspgenerator].[GeneratorUspParameter] ON

MERGE INTO [uspgenerator].[GeneratorUspParameter] AS [Target]
USING (SELECT [id],[usp_id],[Number],[Name],[UserTypeFullname],[is_inactive],[is_out],[has_DefaultValue],[DefaultValue] FROM [uspgenerator].[GeneratorUspParameter] WHERE 1 = 0 -- Empty dataset (source table contained no rows at time of MERGE generation) 
) AS [Source] ([id],[usp_id],[Number],[Name],[UserTypeFullname],[is_inactive],[is_out],[has_DefaultValue],[DefaultValue])
ON ([Target].[id] = [Source].[id])
WHEN MATCHED AND (
	NULLIF([Source].[usp_id], [Target].[usp_id]) IS NOT NULL OR NULLIF([Target].[usp_id], [Source].[usp_id]) IS NOT NULL OR 
	NULLIF([Source].[Number], [Target].[Number]) IS NOT NULL OR NULLIF([Target].[Number], [Source].[Number]) IS NOT NULL OR 
	NULLIF([Source].[Name], [Target].[Name]) IS NOT NULL OR NULLIF([Target].[Name], [Source].[Name]) IS NOT NULL OR 
	NULLIF([Source].[UserTypeFullname], [Target].[UserTypeFullname]) IS NOT NULL OR NULLIF([Target].[UserTypeFullname], [Source].[UserTypeFullname]) IS NOT NULL OR 
	NULLIF([Source].[is_inactive], [Target].[is_inactive]) IS NOT NULL OR NULLIF([Target].[is_inactive], [Source].[is_inactive]) IS NOT NULL OR 
	NULLIF([Source].[is_out], [Target].[is_out]) IS NOT NULL OR NULLIF([Target].[is_out], [Source].[is_out]) IS NOT NULL OR 
	NULLIF([Source].[has_DefaultValue], [Target].[has_DefaultValue]) IS NOT NULL OR NULLIF([Target].[has_DefaultValue], [Source].[has_DefaultValue]) IS NOT NULL OR 
	NULLIF([Source].[DefaultValue], [Target].[DefaultValue]) IS NOT NULL OR NULLIF([Target].[DefaultValue], [Source].[DefaultValue]) IS NOT NULL) THEN
 UPDATE SET
  [Target].[usp_id] = [Source].[usp_id], 
  [Target].[Number] = [Source].[Number], 
  [Target].[Name] = [Source].[Name], 
  [Target].[UserTypeFullname] = [Source].[UserTypeFullname], 
  [Target].[is_inactive] = [Source].[is_inactive], 
  [Target].[is_out] = [Source].[is_out], 
  [Target].[has_DefaultValue] = [Source].[has_DefaultValue], 
  [Target].[DefaultValue] = [Source].[DefaultValue]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([id],[usp_id],[Number],[Name],[UserTypeFullname],[is_inactive],[is_out],[has_DefaultValue],[DefaultValue])
 VALUES([Source].[id],[Source].[usp_id],[Source].[Number],[Source].[Name],[Source].[UserTypeFullname],[Source].[is_inactive],[Source].[is_out],[Source].[has_DefaultValue],[Source].[DefaultValue])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [repo].[GeneratorUspParameter]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[repo].[GeneratorUspParameter] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO



SET IDENTITY_INSERT [uspgenerator].[GeneratorUspParameter] OFF
SET NOCOUNT OFF
GO
